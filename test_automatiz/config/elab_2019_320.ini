#----------------------------------------------------------------------------------
[SOFTWARE]
#----------------------------------------------------------------------------------
# goGPS config file
version = "1.0b7"

#----------------------------------------------------------------------------------
[PARALLELISM]
#----------------------------------------------------------------------------------

# Location of the communication dir for parallel message passing interface
# Absolute or relative to execution path
com_dir = "com"

#----------------------------------------------------------------------------------
[PROJECT]
#----------------------------------------------------------------------------------
# Name of the project
prj_name = "test_automatiz"
# Home of the project
prj_home = "/home/lorenzo/concerteaux_gnss/test_automatiz"

# NOTES ON THE NAMING CONVENTIONS:
# Special Keywords that can be used in file names:
#  - ${WWWW}    4 char GPS week
#  - ${WWWWD} 4+1 char GPS week + day of the week
#  - ${D}       1 char day of the week
#  - ${3H}      2 char GPS hour (00, 03, 06, 09, 12, 15, 18, 21)
#  - ${6H}      2 char GPS hour (00, 06, 12, 18)
#  - ${HH}      2 char GPS hour
#  - ${QQ}      2 char GPS quarter of hour (00, 15, 30, 45)
#  - ${5M}      2 char GPS five minutes (05, 10, ... , 55)
#  - ${YYDOY} 2+3 char GPS year + day of year
#  - ${YYYY}    4 char GPS year
#  - ${YY}      2 char GPS year
#  - ${MM}      2 char GPS month
#  - ${DD}      2 char GPS day
#  - ${DOY}     3 char GPS day of the year
#  - ${S}       1 char session

#----------------------------------------------------------------------------------
[SESSION]
#----------------------------------------------------------------------------------
# "sss_" parameters define the session of observation, they are used
#        to substitute special keywords in file names
# Working session - first data of observation to consider (yyyy-mm-dd <HH:MM:SS>)
# mainly used to detect the name of the file to process
sss_date_start = "2019-11-16 00:00:00"
# Working session - last data of observation to consider (yyyy-mm-dd <HH:MM:SS>)
sss_date_stop = "2019-11-16 23:59:59"
# Id character sequence to be use for the session $(S) special keyword
# (e.g. "01233456789ABCabc")
sss_id_list = "0"
# First session id (char of sss_id_list)
sss_id_start = "0"
# Last session id (char of sss_id_list)
sss_id_stop = "0"
# Flag to base the sessions on the RINEX files
sss_file_based = 1
# Session duration in seconds
sss_duration = 86400
# Session buffer in second [left right]
sss_buffer = [10800 10800]

# Computing the troposphere on multiple sessions (even with buffering)
# could produce discontinuous series, at the change of session.
# To produce a smooth solution, the session from the past can be 
# connected to the new one weightning the two buffered areas.
flag_smooth_tropo_out = 0
flag_separate_coo_at_boundary = 0

#----------------------------------------------------------------------------------
[STATION]
#----------------------------------------------------------------------------------
# Directory containing the data (static)
obs_dir = "RINEX"
# File name of the receivers (can contain special keywords)
obs_name = ["/geno${DOY}${S}.${YY}o" "/gras${DOY}${S}.${YY}o" "/ieng${DOY}${S}.${YY}o"]

# Directory of coordinates files
crd_dir = "station/CRD"
# Name of coordinates (CRD) file
crd_name = "stazioni_igs_test.crd"
# Set the a-priori information on the motion of the receiver
rec_dyn_mode = 0
#  0: static
#  1: constant velocity
#  2: constant acceleration
#  3: variable (stop-go-stop)

# Directory of meteorological data
met_dir = "/home/lorenzo/concerteaux_gnss/test_automatiz/station/MET"
# Meteorological file (when found it will be used)
met_name = ""
# Directory of ocean loading files
ocean_dir = "/home/lorenzo/concerteaux_gnss/test_automatiz/station/ocean"
# Name of ocean loading file (when found it will be used)
ocean_name = ""

#----------------------------------------------------------------------------------
[COMPUTATION_CENTER]
#----------------------------------------------------------------------------------
# List of the computeation center to be used for ephemeris retrival
# Every product is searched locally, when not found is downloaded
# When the file is not found, the system fall back on the next available
# The config file "remote_resource.ini" of the products is stored in:
#  => "main goGPS folder"

# Try to download missing resources from the net (0 / 1)
flag_download = 0

# Preferred ephemeris type,
# accepted values: "final" "rapid" "ultra" "broadcast"
preferred_eph = ["final"]
# Preferred ionospheric type,
# accepted values: "final" "predicted1" "predicted2" "broadcast"
preferred_iono = ["final"]
# SELECTED computational center (e.g. default, igs_glo, igs_gps, code, code_mgex, gfz, jaxa
selected_center = ["default"]

#----------------------------------------------------------------------------------
[REFERENCE]
#----------------------------------------------------------------------------------
# Directory of Earth rotation/orientation parameters (ERP) files
erp_dir = "../../source_codes/goGPS_MATLAB/data/reference/ERP/${YYYY}"
# Directory of International Geomagnetic Reference Frame (IGRF) files
igrf_dir = "../../source_codes/goGPS_MATLAB/data/reference/IGRF"
# Name of IGRF file
igrf_name = "igrf12coeff.txt"
# Directory of Geoid files
geoid_dir = "../../source_codes/goGPS_MATLAB/data/reference/geoid"
# Filename in Geoid dir containing the map of ondulation of the geoid
geoid_name = "geoid_EGM2008_05.mat"
# Directory of Ionospheric Models files
iono_dir = "../../source_codes/goGPS_MATLAB/data/reference/IONO/${YYYY}"
# Directory of Atmospheric Loading Models files
atm_load_dir = "../../source_codes/goGPS_MATLAB/data/reference/ATM_LOAD/${YYYY}"
# Directory of VMF Coeficents
vmf_dir = "../../source_codes/goGPS_MATLAB/data/reference/VMF/${YYYY}"

#----------------------------------------------------------------------------------
[SATELLITE]
#----------------------------------------------------------------------------------
# Directory of Ephemeris files
eph_dir = "../../source_codes/goGPS_MATLAB/data/satellite/EPH/${WWWW}"

# Directory of clock offset files
clk_dir = "../../source_codes/goGPS_MATLAB/data/satellite/CLK/${WWWW}"

# Directory of CRX files (containing satellite problems)
crx_dir = "../../source_codes/goGPS_MATLAB/data/satellite/CRX"

# Directory of DCB files (Differential Code Biases)
dcb_dir = "../../source_codes/goGPS_MATLAB/data/satellite/DCB"

# Directory of EMS files (EGNOS Message Server).
ems_dir = "../../satellite/SBAS/EMS"

#----------------------------------------------------------------------------------
[ANTENNA]
#----------------------------------------------------------------------------------
# Directory of PCO - PCV antex (ATX) files
atx_dir = "../../source_codes/goGPS_MATLAB/data/antenna/ATX"
# PCO - PCV antex (ATX) file
atx_name = "I14.ATX"

#----------------------------------------------------------------------------------
[MULTIPATH]
#----------------------------------------------------------------------------------
# Directory of Zernike multipath coefficients (MP) files
mp_dir = "antenna/MP"

# goGPS manages different kind of multipath maps
# these are the parameters of the map to be generated by the command MPEST
# Resolution of the grids must be perfect divisor of 180
# n and m are expressed in degree

# Regular grid size n x m, set [n m] to zero to avoid its computation
mp_regular_nxm = [1 1]
# Regular grid size n x m, upscaled at 0.5 x 0.5, set [n m] to zero to avoid its computation
mp_regular_up_nxm = [1 1]
# Congruent grid size n x m, set [n m] to zero to avoid its computation
# This is the minimum dimension of the cell, increasing the elevation congruent cells have larger azimuth
mp_congruent_nxm = [2 1]
# Congruent grid size n x m, upscaled at 0.5 x 0.5, set [n m] to zero to avoid its computation
# This is the minimum dimension of the cell, increasing the elevation congruent cells have larger azimuth
mp_congruent_up_nxm = [2 1]
# Max degree for the Zernike smoothed maps
# the 3 values represent the map for: low elevation, mid elevation, high elevation
# If the maximum degree is a small value e.g. 9 setting [9 0 0] will be sufficients
# Note the 3 zernike maps will be summed togeter to form one final smoothed map
# Set to 0 to avoid computation of the zernike smoothed map
# see the wiki on gogps-project.github.io
mp_l_max = [43 43 31]
# Zernike plus congruent map. Congruent grid size n x m, upscaled at 0.5 x 0.5, set [n m] to zero to avoid its computation
mp_zcongruent_up_nxm = [2 1]
# Minimum number of point per cell to consider the cell valid
mp_n_min = 3

#----------------------------------------------------------------------------------
[OUTPUT]
#----------------------------------------------------------------------------------
# Base dir that is going to store the ouput data files
out_dir = "out"
# Prefix ("name") to add to the output (can contain special keywords / subfolders)
out_prefix = "out"

#----------------------------------------------------------------------------------
[OUT TO KEEP]
#----------------------------------------------------------------------------------
# Results to be keep in the "out" object stored in rec

# Rate of the exported tropospheric parameters, this should be a multiplier of the processing rate
# 0 uses the rate of the data
trp_out_rate = 300

# Keep Dt
flag_out_dt = 1
# Keep PWV
flag_out_pwv = 0
# Keep ZWD
flag_out_zwd = 0
# Keep ZTD
flag_out_ztd = 1
# Keep tropospheric gradientents
flag_out_tropo_g = 0
# Keep a-priori troposphere
flag_out_apr_tropo = 1
# Keep pressure / temperature / humidity
flag_out_pth = 0
# Keep satellite outlier flags and cycle slips
flag_out_ocs = 1
# Keep satellite quality (snr)
flag_out_quality = 1
# Keep number of satellites per epoch
flag_out_nspe = 1
# Keep satellite azimuth and elevation
flag_out_azel = 1
# Keep combined residuals
flag_out_res_co = 1
# Keep uncombined code residuals
flag_out_res_pr = 1
# Keep uncombined phase residuals
flag_out_res_ph = 1
# Keep satellite mapping functions (wet / hydrostatic)
flag_out_mf = 1

#----------------------------------------------------------------------------------
[ADV RECEIVERS]
#----------------------------------------------------------------------------------
# Default STD of code observations [m]
std_code = 3
# Default STD of phase observations [m]
std_phase = 0.003
# Default STD of iono-free phase observations [m
std_phase_if = 0.009
# Default STD of a priori receiver clock
sigma0_clock = 4.47e-09
# Default STD of receiver clock
sigma0_r_clock = 31

#----------------------------------------------------------------------------------
[DATA_SELECTION]
#----------------------------------------------------------------------------------
# Constallations for the processing:
# GPS satellite system
GPS_is_active = 1
# Frequencies to be used when this constellation is active
GPS_L1 = 1
GPS_L2 = 1
GPS_L5 = 0

# GLONASS satellite system
GLO_is_active = 0
# Frequencies to be used when this constellation is active
GLO_G1 = 0
GLO_G2 = 0
GLO_G3 = 0

# Galileo satellite system
GAL_is_active = 0
# Frequencies to be used when this constellation is active
GAL_E1 = 0
GAL_E5a = 0
GAL_E5b = 0
GAL_E5 = 0
GAL_E6 = 0

# QZSS satellite system
QZS_is_active = 0
# Frequencies to be used when this constellation is active
QZS_L1 = 0
QZS_L2 = 0
QZS_L5 = 0
QZS_LEX6 = 0

# BeiDou satellite system
BDS_is_active = 0
# Frequencies to be used when this constellation is active
BDS_B1 = 0
BDS_B2 = 0
BDS_B3 = 0

# IRNSS satellite system
IRN_is_active = 0
# Frequencies to be used when this constellation is active
IRN_L5 = 0
IRN_S = 0

# SBAS satellite system
SBS_is_active = 0
# Frequencies to be used when this constellation is active
SBS_L1 = 0
SBS_L5 = 0

# Minimum number of satellite per epoch
min_n_sat = 2
# Cut-off [degrees]
cut_off = 7
# Signal-to-noise ratio absolute threshold [dB]
abs_snr_thr = 0
# Signal-to-noise ratio scaled threshold [dB]
# scaling is performet with respect to the code error level of the first frequency/tracking (usually 1C)
scaled_snr_thr = 0
# Minimum length an arc (a satellite to be used must be seen for a number of
# consecutive epochs equal or greater than this value)
min_arc = 10

# Enable outlier detection (0/1)
flag_outlier = 1
# Threshold on code LS estimation error [m]
pp_spp_thr = 100
# Threshold on maximum (pre-processing) residual of code obs [m]
pp_max_code_err_thr = 10
# Threshold on maximum residual of code obs [m]
max_code_err_thr = 10
# Threshold on maximum residual of phase obs [m]
max_phase_err_thr = 0.1

#----------------------------------------------------------------------------------
[PROCESSING]
#----------------------------------------------------------------------------------

# Enable cycle slip repair (0/1) Experimental
flag_repair = 0
# Enable phase trackings combination
flag_combine_trk = 1

# Processing using weighting mode:
w_mode = 1
#  1: uniform
#  2: sat elevation (sin) dependent
#  3: square of sat elevation (sin^2) dependent

# PPP processing using reweight/snooping mode:
ppp_reweight_mode = 9
# 1: none
# 2: re-weight Huber
# 3: re-weight Huber (no threshold)
# 4: re-weight Danish
# 5: re-weight DanishWM
# 6: re-weight Tukey
# 7: simple snooping
# 8: smart snooping
# 9: smart snooping + arc trim

# Enable PPP on single frequency receiver
# This should be used only when REMIONO or a good iono model is provided
flag_ppp_force_single_freq = 0

# PPP enable ambiguity fixing
flag_ppp_amb_fix = 0
# NET processing using reweight/snooping mode:
net_reweight_mode = 1
# 1: none
# 2: simple 4 loops
# 3: 4 loops + remove bad satellites

# Enable ambiguity fixing
net_amb_fix_approach = 1
# 1: none
# 2: lambda search and shrink
# 3: lambda integer bootstrapping
# 4: lambda partial
# 5: bayesian
# 6: bayesian BIE
# 7: Sequential best integer equivariant

# Allow ambiguity passing from one session to the following (experimental)
flag_amb_pass = 0

# Enable corrections
# Enable re-alignment of satellite clocks (to compensate for discontinuities at the limits of validity)
flag_clock_align = 0

# Enable solid earth tide corrections
flag_solid_earth = 1
# Enable pole tide corrections
flag_pole_tide = 1
# Enable phase wind up corrections
flag_phase_wind = 1
# Enable Shapiro delay corrections
flag_shapiro = 1
# Enable ocean loading corrections
flag_ocean_load = 1
# Enable atmospheric loading corrections
flag_atm_load = 1
# Enable high order ionospheric and bending corrections
flag_hoi = 1
# Enable receiver pcv corrections
flag_rec_pcv = 1
# Enable receiver Zernike based multipath corrections
flag_rec_mp = 1
#  0: No multipath management
#  1: Multipath Zernike interpolated maps
#  2: (1) + stacking maps with congruent cells
#  3: Stacking map with cells [5 x 1]
#  4: Stacking map with congruent cells [5 x 1]
#  5: Stacking map with cells [1 x 1]
#  6: Stacking map with congruent cells [1 x 1]
# Enable a-priori 
flag_apr_iono = 1

# Separate the antenna phase center for each constellations
# Estimate additional coordinates set
flag_coo_rate = 0
# Rate of the additional coordiates
coo_rates = [0 0 0]
#----------------------------------------------------------------------------------
[ATMOSPHERE]
#----------------------------------------------------------------------------------
# Management of ionosphere
iono_management = 1
#  1: Iono free
#  2: smoothed geometry free re-applyed to observables
#  3: external model

# Ionospheric model
iono_model = 3
#  1: no model
#  2: Klobuchar model
#  3: IONEX

# Compute tropospheric indicators (e.g. ZTD):
flag_free_net_tropo = 0

# A-priori zenith delay model
zd_model = 2
#  1: Saastamoinen model
#  2: Vienna Mapping Function gridded

# Mapping function
mapping_function = 2
#  1: Global Mapping Function
#  2: Vienna Mapping Function gridded
#  3: Niell Mapping Function
mapping_function_gradient = 2
#  1: Chen and Herring
#  2: MacMillan

# Meteo data
meteo_data = 2
#  1: standard atmosphere
#  2: Global Pressure Temperature Model
#  3: MET file

#----------------------------------------------------------------------------------
[ADV ATMOSPHERE]
#----------------------------------------------------------------------------------
# Spatial regularization tropo [m^2] (default = 0)
tropo_spatial_reg_sigma = 1e-07
# Spatial regularization tropo halving distance [m] (default = 25000)
tropo_spatial_reg_d_distance = 25000
# Spatial regularization tropo gradient [m^2] (default = 0)
tropo_gradient_spatial_reg_sigma = 1e-07
# Spatial regularization tropo gradient halving distance [m] (default = 25000)
tropo_gradient_spatial_reg_d_distance = 25000

#----------------------------------------------------------------------------------
[---- U2 PARAMETRIZATION --------------------------------------------------]
#----------------------------------------------------------------------------------
#  Estimates coordinates in PPP
flag_coo_ppp = 1
# Estimates coordinates in network
flag_coo_net = 1
# Time parametrization coordinates PPP
tparam_coo_ppp = 1
# Time parametrization coordimates network
tparam_coo_net = 1
# Frequency paramterization coordinates PPP
fparam_coo_ppp = 3
# Frequency paramterization coordinates network
fparam_coo_net = 3
# Rate coordinates PPP
rate_coo_ppp = 0
# Rate coordinates network
rate_coo_net = 0
# absolute regularization PPP [m] (Hor Vert)
areg_coo_ppp = [-1 -1]
# absolute regularization network [m] (Hor Vert)
areg_coo_net = [-1 -1]
# Differential regularization PPP [m/h^0.5] (Hor Vert)
dreg_coo_ppp = [-1 -1]
# Differential regularization network [m/h^0.5] (Hor Vert)
dreg_coo_net = [-1 -1]
# Free network coordinates
flag_free_net_coo = 0
# Estimate ZTD PPP
flag_ztd_ppp = 1
# Estimate ZTD network
flag_ztd_net = 1
# Time parametrization ZTD PPP
tparam_ztd_ppp = 2
# Time parametrization ZTD network
tparam_ztd_net = 6
# Rate ZTD PPP 
rate_ztd_ppp = 900
# Rate ZTD network
rate_ztd_net = 900
# Absolute regularization ZTD PPP [m]
areg_ztd_ppp = 0.5
# Absolute regularization ZTD network [m]
areg_ztd_net = 0.5
# Differential regularization ZTD PPP [m/h^0.5]
dreg_ztd_ppp = 0.015
# Differential regularization ZTD network [m/h^0.5]
dreg_ztd_net = 0.015
# Estimates ZTD gradients in PPP
flag_grad_ppp = 0
# Estimates ZTD gradients in network
flag_grad_net = 1
# Time paramterization ZTD gradients in PPP
tparam_grad_ppp = 2
# Time paramterization ZTD gradients in network
tparam_grad_net = 6
# Rate ZTD gardients in PPP
rate_grad_ppp = 7200
# Rate ZTD gradients in network
rate_grad_net = 7200
# Absolute regularization ZTD gradient PPP [m]
areg_grad_ppp = 0.02
# Absolute regularization ZTD gradient network [m]
areg_grad_net = 0.02
# Differential regularization ZTD gradient PPP [m/h^0.5]
dreg_grad_ppp = 0.001
# Differential regularization ZTD gradient network [m/h^0.5]
dreg_grad_net = 0.001
# Free network for tropo paramters
flag_free_net_tropo = 0
# Estimates ionosphere in PPP
flag_iono_ppp = 1
# Estimates ionosphere in network
flag_iono_net = 1
# Estimate receiver clock error in PPP
flag_rec_clock_ppp = 1
# Estimate receiver clock error in network
flag_rec_clock_net = 1
# Estimate separate reciever clock per phase and pseudorange in PPP
flag_phpr_rec_clock_ppp = 1
# Estimate separate reciever clock per phase and pseudorange in network
flag_phpr_rec_clock_net = 1
# Aboslute regularization reciever clock in PPP [m]
areg_rec_clock_ppp = -1
# Aboslute regularization reciever clock in network [m]
areg_rec_clock_net = -1
# Differential regularization receiver clock in PPP [m/sqrt(h)]
dreg_rec_clock_ppp = -1
# Differential regularization receiver clock in network [m/sqrt(h)]
dreg_rec_clock_net = -1
# Estimate satellite clock error in PPP
flag_sat_clock_ppp = 1
# Estimate satellite clock error in network
flag_sat_clock_net = 1
# Estimate separate satellite clock per phase and pseudorange in PPP
flag_phpr_sat_clock_ppp = 1
# Estimate separate satellite clock per phase and pseudorange in network
flag_phpr_sat_clock_net = 1
# Absolute regularization satellite clock in PPP [m]
areg_sat_clock_ppp = -1
# Absolute regularization satellite clock in network [m]
areg_sat_clock_net = -1
# Differential regularization satellite clock in PPP [m/sqrt(h)]
dreg_sat_clock_ppp = -1
# Differential regularization satellite clock in network [m/sqrt(h)]
dreg_sat_clock_net = -1
# Estimate receiver interfrequency bias in PPP
flag_rec_ifbias_ppp = 0
# Estimate receiver interfrequency bias in network
flag_rec_ifbias_net = 0
# Time paramterization receiver interfrequency bias in PPP
tparam_rec_ifbias_ppp = 6
# Time paramterization receiver interfrequency bias in network
tparam_rec_ifbias_net = 6
# Rate receiver interfrequency bias in PPP
rate_rec_ifbias_ppp = 3600
# Rate receiver interfrequency bias in network
rate_rec_ifbias_net = 3600
# Absolute regularization receiver interfrequency bias in PPP [m]
areg_rec_ifbias_ppp = -1
# Absolute regularization receiver interfrequency bias in network [m]
areg_rec_ifbias_net = -1
# Differential regularization receiver interfrequency bias in PPP [m/sqrt(h)]
dreg_rec_ifbias_ppp = -1
# Differential regularization receiver interfrequency bias in network [m/sqrt(h)]
dreg_rec_ifbias_net = -1
# Estimate satellite interfrequency bias in PPP
flag_sat_ifbias_ppp = 1
# Estimate satellite interfrequency bias in network
flag_sat_ifbias_net = 1
# Time paramterization satellite interfrequency bias in PPP
tparam_sat_ifbias_ppp = 6
# Time paramterization satellite interfrequency bias in network
tparam_sat_ifbias_net = 6
# Rate satellite interfrequency bias in PPP
rate_sat_ifbias_ppp = 3600
# Rate satellite interfrequency bias in network
rate_sat_ifbias_net = 3600
# Absolute regularization satellite interfrequency bias in PPP [m]
areg_sat_ifbias_ppp = -1
# Absolute regularization satellite interfrequency bias in network [m]
areg_sat_ifbias_net = -1
# Differential regularization satellite interfrequency bias in PPP [m/sqrt(h)]
dreg_sat_ifbias_ppp = -1
# Differential regularization satellite interfrequency bias in network [m/sqrt(h)]
dreg_sat_ifbias_net = -1
# Estimate receiver intertracking bias in PPP
flag_rec_trkbias_ppp = 1
# Estimate receiver intertracking bias in network
flag_rec_trkbias_net = 1
# Time paramterization receiver intertracking bias in PPP
tparam_rec_trkbias_ppp = 1
# Time paramterization receiver intertracking bias in network
tparam_rec_trkbias_net = 1
# Rate receiver intertracking bias in PPP
rate_rec_trkbias_ppp = 0
# Rate receiver intertracking bias in network
rate_rec_trkbias_net = 0
# Absolute regularization receiver intertracking bias in PPP [m]
areg_rec_trkbias_ppp = -1
# Absolute regularization receiver intertracking bias in network [m]
areg_rec_trkbias_net = -1
# Differential regularization receiver intertracking bias  in PPP [m/sqrt(h)]
dreg_rec_trkbias_ppp = -1
# Differential regularization receiver intertracking bias  in network [m/sqrt(h)]
dreg_rec_trkbias_net = -1
# Estimate satellite intertracking bias in PPP
flag_sat_trkbias_ppp = 1
# Estimate satellite intertracking bias in network
flag_sat_trkbias_net = 1
# Time paramterization satellite intertracking bias in PPP
tparam_sat_trkbias_ppp = 1
# Time paramterization satellite intertracking bias in network
tparam_sat_trkbias_net = 1
# Rate satellite intertracking bias in PPP
rate_sat_trkbias_ppp = 0
# Rate satellite intertracking bias in network
rate_sat_trkbias_net = 0
# Absolute regularization satellite intertracking bias in PPP [m]
areg_sat_trkbias_ppp = -1
# Absolute regularization satellite intertracking bias in network [m]
areg_sat_trkbias_net = -1
# Differential regularization satellite intertracking bias  in PPP [m/sqrt(h)]
dreg_sat_trkbias_ppp = -1
# Differential regularization satellite intertracking bias  in network [m/sqrt(h)]
dreg_sat_trkbias_net = -1
#----------------------------------------------------------------------------------
[---- UNDOCUMENTED--------------------------------------------------]
#----------------------------------------------------------------------------------
sreg_iono_p2_net = -1
sreg_iono_p1_net = -1
flag_sreg_iono_net = 0
sreg_iono_p2_ppp = -1
sreg_iono_p1_ppp = -1
flag_sreg_iono_ppp = 0
sreg_grad_p2_net = -1
sreg_grad_p1_net = -1
flag_sreg_grad_net = 0
sreg_ztd_p2_net = -1
sreg_ztd_p1_net = -1
flag_sreg_ztd_net = 0
sreg_grad_p2_ppp = -1
sreg_grad_p1_ppp = -1
flag_sreg_grad_ppp = 0
sreg_ztd_p2_ppp = -1
sreg_ztd_p1_ppp = -1
flag_sreg_ztd_ppp = 0

#----------------------------------------------------------------------------------
[COMMANDS]
#----------------------------------------------------------------------------------
# goGPS command list
# NOTE: All the commands will be executed for each session
# Accepted commands:
# ==============================================================================================
#  - SET
#  - PINIT
#  - PKILL
#  - LOAD
#  - RENAME
#  - EMPTY
#  - EMPTYWORK
#  - EMPTYOUT
#  - AZEL
#  - BASICPP
#  - PREPRO
#  - OUTDET
#  - FIXPOS
#  - CODEPP
#  - PPP
#  - NET
#  - SEID
#  - SID
#  - REMIONO
#  - MPEST
#  - KEEP
#  - SYNC
#  - SHOW
#  - VALIDATE
#  - EXPORT
#  - PUSHOUT
#  - REMSAT
#  - REMOBS
#  - REMTMP
# 
# ----------------------------------------------------------------------------------------------
#    NOTE: "T" refers to Target receiver
#          "R" refers to Reference receiver
#          "P" refers to "Passed" receiver
# 
#           - Receivers can be identified with their id number (as defined in "obs_name")
#           - It is possible to select multiple receivers (e.g. T* or T1:4 or T1,3:5)
#           - "END" can be used to select some Receivers / Sessions (e.g T1,3:END)
#           - Whitin a FOR T loop "$" identify the current receiver in the execution
# ----------------------------------------------------------------------------------------------
# 
# Commands description:
# ==============================================================================================
#  - SET       Change the value of a parameter
# 
#              Modifiers:
#                "param = value"     update to the parameter
# 
# ----------------------------------------------------------------------------------------------
#  - PINIT     Parallel init => r n slaves
# 
#              Modifiers:
#                -n=<num_slaves>    minimum number of parallel slaves to request
# 
# ----------------------------------------------------------------------------------------------
#  - PKILL     Parallel kill all the slaves
# 
# ----------------------------------------------------------------------------------------------
#  - LOAD      Import the RINEX file linked with this receiver
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
#                @<rate>            Processing rate in seconds (e.g. @30s, -r=30s)
# 
# ----------------------------------------------------------------------------------------------
#  - RENAME    Rename a receiver (change marker name)
#              WARNING: Every load will reset this name
#              Useful for final plots
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                NAME                Marker name
# 
# ----------------------------------------------------------------------------------------------
#  - EMPTY     Empty the entire receiver
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - EMPTYWORK Empty the receiver work space object
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - EMPTYOUT  Empty the receiver output object
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - AZEL      Compute Azimuth and elevation 
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - BASICPP   Basic Point positioning with no correction
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
# 
# ----------------------------------------------------------------------------------------------
#  - PREPRO    Code positioning, computation of satellite positions and various
#              corrections
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
# 
# ----------------------------------------------------------------------------------------------
#  - OUTDET    Force outlier and cycle slip detection
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - FIXPOS    Fix position
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                FROM_WORK          (flag) use data from Work Space (current session)
#                FROM_OUT           (flag) use data from Receiver Output object
#                AS_APR             (flag) use position as a new a-priori position (not as fixed)
# 
# ----------------------------------------------------------------------------------------------
#  - CODEPP    Code positioning
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
# 
# ----------------------------------------------------------------------------------------------
#  - PPP       Precise Point Positioning using carrier phase observations
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
#                -u                 (flag) use the uncombined engine
# 
# ----------------------------------------------------------------------------------------------
#  - NET       Network solution using undifferenced carrier phase observations
# 
#              Admissible receivers: T, R
# 
#              Modifiers:
#                @<rate>            Processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
#                L<band>            Band to be used for single frequency adjustment
#                --free             Let the network free
#                COO_CRD            Coordinates .CRD file
#                --clk              Export common Parameter in network
#                -u                 (flag) use the uncombined engine
# 
# ----------------------------------------------------------------------------------------------
#  - SEID      Generate a Synthesised L2 on a target receiver 
#              using n (dual frequencies) reference stations
#              SEID (Satellite specific Epoch differenced Ionospheric Delay model)
# 
#              Admissible receivers: R, T
# 
#              Modifiers:
#                PLANE              (flag) use a plane for the interpolation of the geometry free
# 
# ----------------------------------------------------------------------------------------------
#  - SID       Generate a Synthesised L2 on a target receiver 
#              using n (dual frequencies) reference stations
#              SID (Satellite specific Ionospheric Delay model)
#              New SEID approch based on a joint Least Squares estimation instead of time differenciation
# 
#              Admissible receivers: R, T
# 
# ----------------------------------------------------------------------------------------------
#  - REMIONO   Remove ionosphere from observations on a target receiver
#              using n (dual frequencies) reference stations
#              Sligthly different approach w.r.t. SEID
#              (Experimental approach - under testing)
# 
#              Admissible receivers: R, T
# 
# ----------------------------------------------------------------------------------------------
#  - MPEST     Create a multipath model for the receiver.
#              It requires to previously process the target with the uncombined engine.
#              Uncombined residuals must be in the receiver
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - KEEP      Keep in the object the data of a certain constallation
#              at a certain rate
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                @<rate>            Processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
#                -e=<elevation>     Cut-off elevation in degree (e.g. -e=7)
#                -q=<snrthr>        SNR threshold in dbHZ on L1 (e.g. -q=7)
# 
# ----------------------------------------------------------------------------------------------
#  - SYNC      Syncronize all the receivers at the same rate 
#              (with the minimal data span)
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                @<rate>            Processing rate in seconds (e.g. @30s, -r=30s)
# 
# ----------------------------------------------------------------------------------------------
#  - SHOW      Display various plots / images
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                -s=<sat_list>      Active constellations (e.g. -s=GRE)
#                -e=<"name">        Export with name_postfix
#                -c                 Close figure after export (valid only if export is present)
#                MAP                Map of station coordinates (Google Maps Background)
#                L_MAP              Legacy map of station coordinates (Google Maps background)
#                G_MAP              Map of station coordinates (Google Maps Background)
#                DTM_MAP            Map of station coordinates (DTM background)
#                G_MAP_R            Map of station coordinates (Google Maps Background) + RAOB
#                DTM_MAP_R          Map of station coordinates (DTM background) + RAOB
#                DA                 Data Availability
#                ENU                East Nord Up positions
#                PUP                Planar Up positions
#                ENUBSL             East Nord Up baseline
#                -c=<type>          Modifier: change coordinate type (0 coordinates of the sessions, 1 first additional coordinates, 2 second additional coordinates, 3 third additional coordinates)
#                PUPBSL             Planar Up baseline
#                XYZ                XYZ Earth Fixed Earth centered positions
#                CKW                Clock errors of the last session
#                CK                 Clock errors
#                MP<N>              Show multipath map (1: Zernike, 2: Zernike + res, 3: gridded, 4: congruent cell grid, 5: gridded 1x1, 6: congruent cell grid 1x1)
#                SNR                Signal to Noise Ratio (polar plot)
#                SNRI               Signal to Noise Ratio (polar plot, interpolated map)
#                OSTAT              Observation stats (last session)
#                PSTAT              Processing stats (multi-session)
#                OCS                Outliers and cycle slips
#                OCSP               Outliers and cycle slips (polar plot)
#                RES_(O|W)_PR       Residual plot
#                RES_(O|W)_PH       Residual plot
#                RES_(O|W)_PR_STAT  Output | Work-Space combined pseudo-range residuals
#                RES_(O|W)_PH_STAT  Output | Work-Space combined phase residuals
#                RES_(O|W)_PR_SKY   Residual sky plot
#                RES_(O|W)_PH_SKY   Residual sky plot
#                RES_(O|W)_PR_SKYP  Residual sky plot
#                RES_(O|W)_PH_SKYP  Residual sky plot
#                PTH                Pressure / Temperature / Humidity
#                NSAT               Number of satellite used (multi-receiver)
#                NSATSS             Number of satellite used (sys by sys)
#                NSATSSS            Smoothed number of satellite used (sys by sys)
#                ZTD                Zenith Total Delay
#                ZTD_VSH            Zenith Total Delay vs Height
#                ZHD                Zenith Hydrostatic Delay
#                ZWD                Zenith Wet Delay
#                ZWD_VSH            Zenith Wet Delay vs Height
#                PWV                Precipitable Water Vapour
#                STD                Zenith Total Delay with slants
#                RES_STD            Slants Total Delay residuals (polar plot)
#                TGRAD              Tropospheric gradients table
# 
# ----------------------------------------------------------------------------------------------
#  - VALIDATE  Validate estimated parameter with external data
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                -e=<"name">        Export with name_postfix
#                -c                 Close figure after export (valid only if export is present)
#                IGS                Use IGS results for validation
#                IGS_ZTD            Use IGS results for ZTD validation
#                RAOB               Use RAOB for ZTD validation
# 
# ----------------------------------------------------------------------------------------------
#  - EXPORT    Export
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                CORE_MAT           Save the core as .mat file
#                PLAIN_MAT          Save the receiver as plain .mat files (no objects)
#                REC_MAT            Receiver object as .mat file
#                REC_RIN            Rinex file containing the actual data stored in rec.work
#                MP                 Export the multipath maps stored in the GNSS_Station object.
#                COO_CRD            Coordinates .CRD file
#                XYZ_TXT            Coordinates XYZ in plain text format
#                ENU_TXT            Coordinates local ENU in plain text format
#                GEO_TXT            Coordinates Geodetic in plain text format
#                TRP_SNX            Tropo parameters as SINEX file
#                TRP_MAT            Tropo parameters as .mat file
#                TRP_CSV            Tropo parameters as .csv file
#                TRP_HN             Tropo parameters as a HydroNet (CSV like) file
# 
# ----------------------------------------------------------------------------------------------
#  - PUSHOUT   Push results in output
#              when used it disables automatic push
# 
#              Admissible receivers: T
# 
#              Modifiers:
#                @<rate>            Processing rate in seconds (e.g. @30s, -r=30s)
# 
# ----------------------------------------------------------------------------------------------
#  - REMSAT    Remove satellites, format: <1ch sat. sys. (GREJCI)><2ch sat. prn>
#              e.g. REMSAT T1 G04,G29,J04
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - REMOBS    Remove observation, format: <1ch obs. type (CPDS)><1ch freq><1ch tracking>
#              e.g. REMOBS T1 D,S2,L2C
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - REMTMP    Remove data used during computation but no more necessary to push the results out
# 
#              Admissible receivers: T
# 
# ----------------------------------------------------------------------------------------------
#  - FOR       For session loop start
# 
#              Admissible session parameters: S, T
# 
# ----------------------------------------------------------------------------------------------
#  - PAR       Parallel section start (run on targets)
#              use T$ as target in this section
# 
#              Admissible session parameters: S, T, P
# 
# ----------------------------------------------------------------------------------------------
#  - END       For loop end or Parallel section end
# 
# ----------------------------------------------------------------------------------------------
# 
cmd_001 = "FOR S*"
cmd_002 = "FOR T*"
cmd_003 = "LOAD T$ @30s"
cmd_004 = "PREPRO T$"
cmd_005 = "PPP T$"
cmd_006 = "END"
cmd_007 = "PUSHOUT T*"
cmd_008 = "END"
cmd_009 = "EXPORT T* TRP_CSV"

